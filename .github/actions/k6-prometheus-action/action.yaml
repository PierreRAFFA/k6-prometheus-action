name: 'k6'
description: 'Run Performance Test using k6'
branding:
  icon: 'alert-octagon'
  color: 'green'
inputs:
  prometheus-remote-write-url:
    description: 'Specifies Prometheus Remote Write URL used by k6 to send the metrics to (ex: http://your.prometheus.server.com/api/v1/write)'
    required: true
  project:
    description: 'Allows to organise performance tests across teams'
    required: true
  environment:
    required: true
  author:
    description: 'Specifies the author of the run'
    required: true
  run-flags: 
    # Run a single VU, 10 times.
    # k6 run -i 10 script.js

    # Run 5 VUs, splitting 10 iterations between them.
    # k6 run -u 5 -i 10 script.js

    # Run 5 VUs for 10s.
    # k6 run -u 5 -d 10s script.js

    # Ramp VUs from 0 to 100 over 10s, stay there for 60s, then 10s down to 0.
    # k6 run -u 0 -s 10s:100 -s 60s -s 10s:0
    description: 'Specifies a list of flags to apply to k6 run'
    required: true
    default: '-i 1 -u 1'
  env-vars-flags:
    description: 'Specifies the list of additional env vars to apply to k6 run i.e. `-e OAUTH2_CLIENT_ID=clientID`'
    required: false
  script-filepath:
    description: 'Specifies the script filepath to execute'
    required: true
  slack-channel:
    description: 'Specifies the slack channel to notify'
    required: false
  slack-token:
    description: 'Specifies the slack App token'
    required: false
  grafana-dashboard-url:
    description: 'Specifies Grafana Dasboard Url used to write a link to Grafana in the Slack notification (ex: https://your.grafana.server.com/d/k6-load-tests/k6-load-tests?orgId=1)'
    required: false
runs:
  using: 'composite'
  steps:
  - name: Run
    id: run
    shell: bash
    run: |
      testId="${{ inputs.environment }}_$(date --utc +%F_%T)"
      echo "##[set-output name=testId;]$(echo ${testId})"
      K6_PROMETHEUS_RW_SERVER_URL=${{ prometheus-remote-write-url }} \
      K6_PROMETHEUS_RW_TREND_STATS='p(99),p(95),p(90),max,min,avg,count,sum' \
      k6 run \
        -e PROJECT=${{ inputs.project }} \
        -e ENVIRONMENT=${{ inputs.environment }} \
        -e TEST_ID=${testId} \
        -e AUTHOR=${{ inputs.author }} \
        ${{ inputs.run-flags }} \
        --out xk6-prometheus-rw \
        ${{ inputs.script-filepath }} \
        ${{ inputs.env-vars-flags }}

  - name: Store html report
    if: always()
    uses: actions/upload-artifact@v2
    with:
      name: summary.html 
      path: summary.html

  - name: Store json report
    if: always()
    uses: actions/upload-artifact@v2
    with: 
      name: summary.json
      path: summary.json

  - name: Notify Slack Channel
    if: always()
    shell: bash
    run: |
      node ${GITHUB_ACTION_PATH}/slack.js \
        '${{ inputs.project }}' \
        '${{ inputs.environment }}' \
        '${{ steps.run.outputs.testId }}' \
        '${{ inputs.author }}' \
        '${{ inputs.slack-channel }}' \
        '${{ inputs.slack-token }}'
        '${{ inputs.grafana-dashboard-url }}'